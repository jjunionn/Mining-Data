import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report
from sklearn.decomposition import PCA
from sklearn.tree import DecisionTreeClassifier
from sklearn.preprocessing import LabelEncoder
from google.colab import files

# Upload file manual dari komputer
uploaded = files.upload()

# Baca dataset
df = pd.read_csv("loan.csv", sep=";")
print("Data asli:")
print(df.head())

# Encode kolom kategorikal relevan
le = LabelEncoder()
df["Pekerjaan"] = le.fit_transform(df["Pekerjaan"])
df["Pinjaman_Disetuju"] = le.fit_transform(df["Pinjaman_Disetuju"])  # Ya/Tidak -> 1/0

# Kolom 'Nama' tidak digunakan sebagai fitur
# Fitur (X) pakai kolom numerik dan kategorikal yang relevan
X = df[["Penghasilan", "Pekerjaan", "Umur"]]
y = df["Pinjaman_Disetuju"]

# Split data 70:30
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=42
)

# Pilih algoritma
model = DecisionTreeClassifier(random_state=42)

# Training
model.fit(X_train, y_train)

# Prediksi
y_pred = model.predict(X_test)

# Evaluasi
print("\n=== Evaluasi Model ===")
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred, zero_division=0))

# Visualisasi dengan PCA
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X)

plt.figure(figsize=(8,6))
plt.scatter(X_pca[:,0], X_pca[:,1], c=y, cmap=plt.cm.Paired, edgecolor="k", s=80)
plt.xlabel("PC1")
plt.ylabel("PC2")
plt.title(f"Visualisasi PCA - {type(model).__name__}")
plt.colorbar(label="Pinjaman Disetuju (1=Ya, 0=Tidak)")
plt.show()
