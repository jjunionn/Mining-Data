import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report
from sklearn.decomposition import PCA

from google.colab import files

# Upload file manual dari komputer
uploaded = files.upload()

# ==== PILIH ALGORITMA ====
# Decision Tree
# from sklearn.tree import DecisionTreeClassifier
# model = DecisionTreeClassifier(random_state=42)

# KNN
# from sklearn.neighbors import KNeighborsClassifier
# model = KNeighborsClassifier(n_neighbors=5)

# Random Forest
# from sklearn.ensemble import RandomForestClassifier
# model = RandomForestClassifier(n_estimators=100, random_state=42)

#Naive Bayes
from sklearn.naive_bayes import GaussianNB
model = GaussianNB()

# Logistic Regression
# from sklearn.linear_model import LogisticRegression
# model = LogisticRegression(max_iter=1000)

#  SVM
# from sklearn.svm import SVC
# model = SVC(kernel="linear", probability=True, random_state=42)

# ==== LOAD DATA ====
df = pd.read_csv("mahasiswa_lengkap.csv")
print(df.head())

# Fitur (X) pakai semua kolom numerik
X = df[["UTS", "UAS", "Tugas", "Kehadiran", "Praktikum"]]
y = df["Lulus"]

# Split data 70:30
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=42
)

# ==== TRAINING ====
model.fit(X_train, y_train)

# ==== PREDIKSI ====
y_pred = model.predict(X_test)

# ==== EVALUASI ====
print("\n=== Evaluasi Model ===")
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

# ==== VISUALISASI ====
# Karena fitur lebih dari 2, boundary 2D tidak bisa divisualkan langsung.
# Jadi kita buat visualisasi sederhana perbandingan prediksi vs real

pca = PCA(n_components=2)
X_pca = pca.fit_transform(X)

plt.figure(figsize=(8,6))
plt.scatter(X_pca[:,0], X_pca[:,1], c=(y=="Ya").astype(int), cmap=plt.cm.Paired, edgecolor="k", s=80)
plt.xlabel("PC1")
plt.ylabel("PC2")
plt.title(f"Visualisasi PCA - {type(model).__name__}")
plt.colorbar(label="Lulus (1=Ya, 0=Tidak)")
plt.show()
